### YamlMime:ModuleUnit
uid: learn.choose-storage-approach-in-azure.4-transactions
metadata:
  title: Raggruppare più operazioni in una transazione
  description: Raggruppare più operazioni in una transazione
  ms.date: 09/24/2018
  author: markjulmar
  ms.author: smmark
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.openlocfilehash: 248c574b0e661f6dbd0e11d1af8a989ccba7fd40
  ms.sourcegitcommit: f9023fdf01347b57619974b6961e1565cfc483d9
  ms.translationtype: HT
  ms.contentlocale: it-IT
  ms.lasthandoff: 09/09/2018
  ms.locfileid: "44230758"
title: Raggruppare più operazioni in una transazione
durationInMinutes: 10
content: >
  [!include[](includes/4-transactions.md)]
quiz:
  title: Transazioni
  questions:
  - content: Quale tipo di sistema è necessario per i dati dei prodotti?
    choices:
    - content: OLAP
      isCorrect: false
      incorrectExplanation: No, un sistema OLAP è ideale per i dati che richiedono transazioni o query complesse e non richiedono bassa latenza. I dati dei prodotti devono essere modificati rapidamente e richiedono un sistema a bassa latenza e velocità effettiva elevata.
    - content: OLTP
      isCorrect: true
      correctExplanation: Sì, i sistemi OLTP supportano numerosi utenti, hanno tempi di risposta rapidi, gestiscono volumi elevati di dati, offrono disponibilità elevata e in genere gestiscono transazioni di piccole dimensioni o relativamente semplici, quindi si tratta della scelta ideale per il set di dati dei prodotti.
  - content: Se le operazioni di aggiornamento dell'inventario ed elaborazione dei pagamenti facessero parte della stessa transazione e un utente tentasse di applicare un buono spesa per l'intero importo inviando quindi lo stesso identico ordine via telefono e dal computer portatile a un database conforme con ACID, cosa accadrebbe?
    choices:
    - content: Il primo ordine verrebbe completato, il credito rimanente diventerebbe pari a zero e il secondo ordine verrebbe aggiornato in modo da indicare che l'utente non ha credito rimanente per il negozio.
      isCorrect: false
      incorrectExplanation: No, a causa dell'isolamento nei database transazionali, le due transazioni vengono gestite in modo indipendente e la prima transazione non modifica la seconda transazione in corso, fino a che la seconda transazione non viene completata con esito negativo.
    - content: Un ordine verrebbe elaborato usando il credito per il negozio, mentre l'altro ordine comporterebbe l'aggiornamento dell'inventario rimanente per gli articoli nel carrello, ma l'ordine non verrebbe completato.
      isCorrect: false
      incorrectExplanation: No, a causa dell'atomicità nei database transazionali, il secondo ordine non comporta l'aggiornamento dell'inventario rimanente per l'ordine non riuscito.
    - content: Un ordine verrebbe elaborato usando il credito per il negozio, mentre l'altro ordine non verrebbe elaborato.
      isCorrect: true
      correctExplanation: Sì, dopo avere determinato per il secondo ordine che il credito per il negozio è già stato usato, viene eseguito il rollback della transazione.
